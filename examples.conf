  [
        {
          "title": "Basic Examples",
          "items": [
              {
                  "name": "shape",
                  "title": "Simple Shapes",
                  "description": "How to insert simple shapes via API calls",
                  "url": "shape/index.html",
                  "icon": "shape/icon.png",
                  "status": "normal"
              }
          ]
      },
      {
          "title": "Basic Galerie",
          "items": [
              {
                  "name": "galerie_shape_basic",
                  "title": "graphiti.shape.basic.*",
                  "description": "Figures in the graphiti.shape.basic.* package",
                  "url": "galerie_shape_basic/index.html",
                  "icon": "galerie_shape_basic/icon.png",
                  "status": "normal"
              },
              {
                  "name": "galerie_shape_diagram",
                  "title": "graphiti.shape.diagram.*",
                  "description": "Figures in the graphiti.shape.diagram.* package",
                  "url": "galerie_shape_diagram/index.html",
                  "icon": "galerie_shape_diagram/icon.png",
                  "status": "normal"
              },
              {
                  "name": "galerie_shape_analog",
                  "title": "graphiti.shape.analog.*",
                  "description": "Figures in the graphiti.shape.analog.* package",
                  "url": "galerie_shape_analog/index.html",
                  "icon": "galerie_shape_analog/icon.png",
                  "status": "normal"
              },
              {
                  "name": "galerie_shape_widget",
                  "title": "graphiti.shape.widget.*",
                  "description": "Figures in the graphiti.shape.widget.* package",
                  "url": "galerie_shape_widget/index.html",
                  "icon": "galerie_shape_widget/icon.png",
                  "status": "normal"
              }
          ]
      },
      {
          "title": "Custom Figures",
          "items": [
              {
                  "name": "shape_custom_simple",
                  "title": "Triangle Figure",
                  "description": "Create a simple triangle figure. No magic, just to show how to implement your own vector figure.",
                  "url": "shape_custom_simple/index.html",
                  "icon": "shape_custom_simple/icon.png",
                  "status": "normal"
              },
              {
                  "name": "shape_timer",
                  "title": "Timer Label",
                  "description": "A custom label with an internal timer which updates the text.",
                  "url": "shape_timer/index.html",
                  "icon": "shape_timer/icon.png",
                  "status": "normal"
              },
              {
                  "name": "shape_anim_circle",
                  "title": "Animated Figure",
                  "description": "A SetFigure and a little bit of sinus/cosinus mathematics. It is possible to drag&drop the figure as well.",
                  "url": "shape_anim_circle/index.html",
                  "icon": "shape_anim_circle/icon.png",
                  "status": "normal"
              }
          ]
      },
      {
          "title": "Interaction with Figures",
          "items": [
              {
                  "name": "interaction_dblclick",
                  "title": "DblClick Figure",
                  "description": "Example how to handle a double click within a figure.",
                  "url": "interaction_dblclick/index.html",
                  "icon": "interaction_dblclick/icon.png",
                  "status": "normal"
              },
              {
                  "name": "interaction_click",
                  "title": "Click Figure with Sparkline",
                  "description": "Using timer, Sparkline and a simple click event to create a simple flow diagram",
                  "url": "interaction_click/index.html",
                  "icon": "interaction_click/icon.png",
                  "status": "normal"
              },
              {
                  "name": "interaction_slider",
                  "title": "Slider / Sparkline",
                  "description": "Connect a slider as input for a animated Sparkline",
                  "url": "interaction_slider/index.html",
                  "icon": "interaction_slider/icon.png",
                  "status": "normal"
              },
              {
                  "name": "interaction_pie",
                  "title": "Slider with Pie Chart",
                  "description": "Using 3 sliders in combination with a pie chart. The sliders are the data source for the pie chart.",
                  "url": "interaction_pie/index.html",
                  "icon": "interaction_pie/icon.png",
                  "status": "normal"
              }
          ]
      },
      {
          "title": "Build in Functions",
           "items": [
            {
                  "name": "buildin_commandstack",
                  "title": "Undo & Redo",
                  "description": "Usage of the internal CommandStack for Undo/Redo operations",
                  "url": "buildin_commandstack/index.html",
                  "icon": "buildin_commandstack/icon.png",
                  "status": "normal"
              },
              {
                  "name": "buildin_zoom",
                  "title": "Zoom",
                  "description": "Simple setZoom and getZoom method in the Canvas class",
                  "url": "buildin_zoom/index.html",
                  "icon": "buildin_zoom/icon.png",
                  "status": "normal"
              },
              {
                  "name": "buildin_bridge",
                  "title": "Bridge",
                  "description": "Automatic Bridge of crossing connectors",
                  "url": "buildin_bridge/index.html",
                  "icon": "buildin_bridge/icon.png",
                  "status": "updated"
              }
           ]
      },
      {
          "title": "Read/Write",
          "items": [
              {
                  "name": "io_json_basic",
                  "title": "Basic JSON",
                  "description": "Load a JSON document into the canvas. Additional the current canvas will be dumped as JSON.",
                  "url": "io_json_basic/index.html",
                  "icon": "io_json_basic/icon.png",
                  "status": "normal"
              },
              {
                  "name": "io_json_connections",
                  "title": "JSON with Connections",
                  "description": "Load a JSON document into the canvas which respects connections too.",
                  "url": "io_json_connections/index.html",
                  "icon": "io_json_connections/icon.png",
                  "status": "normal"
              },
              {
                  "name": "io_svg_basic",
                  "title": "SVG Export",
                  "description": "Export the canvas into a SVG document. The document can be loaded with any SVG editor like Inkscape or Sodipodi",
                  "url": "io_svg_basic/index.html",
                  "icon": "io_svg_basic/icon.png",
                  "status": "normal"
              },
              {
                  "name": "io_png_overview",
                  "title": "PNG Export",
                  "description": "Export the canvas into a PNG image and show them as preview window.",
                  "url": "io_png_overview/index.html",
                  "icon": "io_png_overview/icon.png",
                  "status": "normal"
              }
          ]
      },
      {
          "title": "Connection Examples",
          "items": [
              {
                  "name": "connection_drop",
                  "title": "Connection Drop",
                  "description": "Show how to infix a node into a Connection with a Drag&Drop operation",
                  "url": "connection_drop/index.html",
                  "icon": "connection_drop/icon.png",
                  "status": "updated"
              },
              {
                  "name": "connection_labeledit",
                  "text": "Edit Connection Label",
                  "description": "How to register a label for editing with just a snippet jQuery",
                  "url": "connection_labeledit/index.html",
                  "icon": "connection_labeledit/icon.png",
                  "status": "normal"
              },
              {
                  "name": "connection_locator",
                  "text": "Connection Locator",
                  "description": "Usage of a 'Locator' for a label which is bounded to a connection.",
                  "url": "connection_locator/index.html",
                  "icon": "connection_locator/icon.png",
                  "status": "normal"
              }
              
          ]
      }
      
  ]